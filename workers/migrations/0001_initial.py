# Generated by Django 5.2.4 on 2025-07-28 21:24

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models
import uuid
import workers.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('os', models.CharField(blank=True, default='', max_length=100)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('available_tools', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['hostname'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique name for the asset file.', max_length=255, unique=True)),
                ('blend_file', models.FileField(help_text='The uploaded .blend file.', upload_to=workers.models.asset_upload_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='workers.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Animation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('output_file_pattern', models.CharField(max_length=1024)),
                ('start_frame', models.IntegerField()),
                ('end_frame', models.IntegerField()),
                ('status', models.CharField(default='QUEUED', max_length=50)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('blender_version', models.CharField(default='4.5', help_text="e.g., '4.5' or 'blender-4.5.0-windows-x64'", max_length=100)),
                ('render_engine', models.CharField(default='CYCLES', help_text="e.g., 'CYCLES' or 'BLENDER_EEVEE'", max_length=100)),
                ('render_device', models.CharField(default='CPU', max_length=10)),
                ('render_settings', models.JSONField(blank=True, default=dict, help_text="Blender render settings overrides, e.g., {'cycles.samples': 128, 'resolution_x': 1920}")),
                ('total_render_time_seconds', models.IntegerField(default=0, help_text='The cumulative render time of all completed frames in this animation.')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='animations', to='workers.asset')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='animations', to='workers.project')),
            ],
        ),
        migrations.CreateModel(
            name='TiledJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('final_resolution_x', models.IntegerField()),
                ('final_resolution_y', models.IntegerField()),
                ('tile_count_x', models.IntegerField(default=4)),
                ('tile_count_y', models.IntegerField(default=4)),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('RENDERING', 'Rendering'), ('ASSEMBLING', 'Assembling'), ('DONE', 'Done'), ('ERROR', 'Error')], default='QUEUED', max_length=50)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('blender_version', models.CharField(default='4.5', max_length=100)),
                ('render_engine', models.CharField(default='CYCLES', max_length=100)),
                ('render_device', models.CharField(default='CPU', max_length=10)),
                ('render_settings', models.JSONField(blank=True, default=dict, help_text='Global render settings for all tiles.')),
                ('total_render_time_seconds', models.IntegerField(default=0)),
                ('output_file', models.FileField(blank=True, help_text='The final, assembled output image.', null=True, upload_to=workers.models.tiled_job_output_upload_path)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tiled_jobs', to='workers.asset')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiled_jobs', to='workers.project')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique name for the render job.', max_length=255, unique=True)),
                ('output_file_pattern', models.CharField(help_text='Output file path pattern (e.g., //render/#.png)', max_length=1024)),
                ('start_frame', models.IntegerField(default=1)),
                ('end_frame', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('RENDERING', 'Rendering'), ('DONE', 'Done'), ('ERROR', 'Error'), ('CANCELED', 'Canceled')], default='QUEUED', max_length=50)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('blender_version', models.CharField(default='4.5', help_text="e.g., '4.5' or 'blender-4.5.0-windows-x64'", max_length=100)),
                ('render_engine', models.CharField(default='CYCLES', help_text="e.g., 'CYCLES' or 'BLENDER_EEVEE'", max_length=100)),
                ('render_device', models.CharField(default='CPU', max_length=10)),
                ('render_settings', models.JSONField(blank=True, default=dict, help_text="Blender render settings overrides, e.g., {'cycles.samples': 128, 'resolution_x': 1920}")),
                ('last_output', models.TextField(blank=True, default='')),
                ('error_message', models.TextField(blank=True, default='')),
                ('render_time_seconds', models.IntegerField(blank=True, help_text='The total time in seconds this job took to render.', null=True)),
                ('output_file', models.FileField(blank=True, help_text='The final rendered output file uploaded by the worker.', null=True, upload_to=workers.models.job_output_upload_path)),
                ('animation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='workers.animation')),
                ('assigned_worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='jobs', to='workers.worker')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='jobs', to='workers.asset')),
                ('tiled_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='workers.tiledjob')),
            ],
            options={
                'verbose_name': 'Render Job',
                'verbose_name_plural': 'Render Jobs',
                'ordering': ['-submitted_at'],
            },
        ),
    ]